<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pz.crowd.mapper.MemberPOMapper">
  <resultMap id="BaseResultMap" type="com.pz.crowd.entity.po.MemberPO">
    <id column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="member_account" jdbcType="VARCHAR" property="memberAccount" />
    <result column="member_password" jdbcType="VARCHAR" property="memberPassword" />
    <result column="member_username" jdbcType="VARCHAR" property="memberUsername" />
    <result column="member_email" jdbcType="VARCHAR" property="memberEmail" />
    <result column="member_authstatus" jdbcType="INTEGER" property="memberAuthstatus" />
    <result column="member_user_type" jdbcType="INTEGER" property="memberUserType" />
    <result column="member_real_name" jdbcType="VARCHAR" property="memberRealName" />
    <result column="member_card_number" jdbcType="VARCHAR" property="memberCardNumber" />
    <result column="member_account_type" jdbcType="INTEGER" property="memberAccountType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    member_id, member_account, member_password, member_username, member_email, member_authstatus, 
    member_user_type, member_real_name, member_card_number, member_account_type
  </sql>
  <select id="selectByExample" parameterType="com.pz.crowd.entity.po.MemberPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_member
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_member
    where member_id = #{memberId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pz.crowd.entity.po.MemberPOExample">
    delete from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pz.crowd.entity.po.MemberPO">
    insert into t_member (member_id, member_account, member_password, 
      member_username, member_email, member_authstatus, 
      member_user_type, member_real_name, member_card_number, 
      member_account_type)
    values (#{memberId,jdbcType=BIGINT}, #{memberAccount,jdbcType=VARCHAR}, #{memberPassword,jdbcType=VARCHAR}, 
      #{memberUsername,jdbcType=VARCHAR}, #{memberEmail,jdbcType=VARCHAR}, #{memberAuthstatus,jdbcType=INTEGER}, 
      #{memberUserType,jdbcType=INTEGER}, #{memberRealName,jdbcType=VARCHAR}, #{memberCardNumber,jdbcType=VARCHAR}, 
      #{memberAccountType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pz.crowd.entity.po.MemberPO">
    insert into t_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberAccount != null">
        member_account,
      </if>
      <if test="memberPassword != null">
        member_password,
      </if>
      <if test="memberUsername != null">
        member_username,
      </if>
      <if test="memberEmail != null">
        member_email,
      </if>
      <if test="memberAuthstatus != null">
        member_authstatus,
      </if>
      <if test="memberUserType != null">
        member_user_type,
      </if>
      <if test="memberRealName != null">
        member_real_name,
      </if>
      <if test="memberCardNumber != null">
        member_card_number,
      </if>
      <if test="memberAccountType != null">
        member_account_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberAccount != null">
        #{memberAccount,jdbcType=VARCHAR},
      </if>
      <if test="memberPassword != null">
        #{memberPassword,jdbcType=VARCHAR},
      </if>
      <if test="memberUsername != null">
        #{memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="memberEmail != null">
        #{memberEmail,jdbcType=VARCHAR},
      </if>
      <if test="memberAuthstatus != null">
        #{memberAuthstatus,jdbcType=INTEGER},
      </if>
      <if test="memberUserType != null">
        #{memberUserType,jdbcType=INTEGER},
      </if>
      <if test="memberRealName != null">
        #{memberRealName,jdbcType=VARCHAR},
      </if>
      <if test="memberCardNumber != null">
        #{memberCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="memberAccountType != null">
        #{memberAccountType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pz.crowd.entity.po.MemberPOExample" resultType="java.lang.Long">
    select count(*) from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_member
    <set>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.memberAccount != null">
        member_account = #{record.memberAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.memberPassword != null">
        member_password = #{record.memberPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.memberUsername != null">
        member_username = #{record.memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.memberEmail != null">
        member_email = #{record.memberEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.memberAuthstatus != null">
        member_authstatus = #{record.memberAuthstatus,jdbcType=INTEGER},
      </if>
      <if test="record.memberUserType != null">
        member_user_type = #{record.memberUserType,jdbcType=INTEGER},
      </if>
      <if test="record.memberRealName != null">
        member_real_name = #{record.memberRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberCardNumber != null">
        member_card_number = #{record.memberCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.memberAccountType != null">
        member_account_type = #{record.memberAccountType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_member
    set member_id = #{record.memberId,jdbcType=BIGINT},
      member_account = #{record.memberAccount,jdbcType=VARCHAR},
      member_password = #{record.memberPassword,jdbcType=VARCHAR},
      member_username = #{record.memberUsername,jdbcType=VARCHAR},
      member_email = #{record.memberEmail,jdbcType=VARCHAR},
      member_authstatus = #{record.memberAuthstatus,jdbcType=INTEGER},
      member_user_type = #{record.memberUserType,jdbcType=INTEGER},
      member_real_name = #{record.memberRealName,jdbcType=VARCHAR},
      member_card_number = #{record.memberCardNumber,jdbcType=VARCHAR},
      member_account_type = #{record.memberAccountType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pz.crowd.entity.po.MemberPO">
    update t_member
    <set>
      <if test="memberAccount != null">
        member_account = #{memberAccount,jdbcType=VARCHAR},
      </if>
      <if test="memberPassword != null">
        member_password = #{memberPassword,jdbcType=VARCHAR},
      </if>
      <if test="memberUsername != null">
        member_username = #{memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="memberEmail != null">
        member_email = #{memberEmail,jdbcType=VARCHAR},
      </if>
      <if test="memberAuthstatus != null">
        member_authstatus = #{memberAuthstatus,jdbcType=INTEGER},
      </if>
      <if test="memberUserType != null">
        member_user_type = #{memberUserType,jdbcType=INTEGER},
      </if>
      <if test="memberRealName != null">
        member_real_name = #{memberRealName,jdbcType=VARCHAR},
      </if>
      <if test="memberCardNumber != null">
        member_card_number = #{memberCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="memberAccountType != null">
        member_account_type = #{memberAccountType,jdbcType=INTEGER},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pz.crowd.entity.po.MemberPO">
    update t_member
    set member_account = #{memberAccount,jdbcType=VARCHAR},
      member_password = #{memberPassword,jdbcType=VARCHAR},
      member_username = #{memberUsername,jdbcType=VARCHAR},
      member_email = #{memberEmail,jdbcType=VARCHAR},
      member_authstatus = #{memberAuthstatus,jdbcType=INTEGER},
      member_user_type = #{memberUserType,jdbcType=INTEGER},
      member_real_name = #{memberRealName,jdbcType=VARCHAR},
      member_card_number = #{memberCardNumber,jdbcType=VARCHAR},
      member_account_type = #{memberAccountType,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
</mapper>