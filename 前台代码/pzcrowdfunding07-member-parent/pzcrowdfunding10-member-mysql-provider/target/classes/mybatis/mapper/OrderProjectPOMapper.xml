<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pz.crowd.mapper.OrderProjectPOMapper">

  <resultMap id="OrderProjectVOMap" type="com.pz.crowd.entity.vo.OrderProjectVO">
    <result property="projectName" column="project_name"/>
    <result property="launchMember" column="member_username"/>
    <result property="returnContent" column="return_content"/>
    <result property="supportMoney" column="support_money"/>
    <result property="freight" column="freight"/>
    <result property="signalPurchase" column="signal_purchase"/>
    <result property="purchase" column="purchase"/>
  </resultMap>

  <select id="selectOrderProjectVO" resultMap="OrderProjectVOMap">
SELECT
    project_name,
    member_username,
    return_content,
    support_money,
    freight,
    signal_purchase,
    purchase
FROM
    t_project_return_info
        INNER JOIN
    t_project ON t_project.project_id = t_project_return_info.project_id
        INNER JOIN
    t_project_launch_member_info ON t_project_launch_member_info.project_id = t_project_return_info.project_id
        INNER JOIN
    t_member ON t_member.member_id = t_project_launch_member_info.member_id
WHERE
    t_project_return_info.id = #{returnId}
  </select>






  <resultMap id="BaseResultMap" type="com.pz.crowd.entity.po.OrderProjectPO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="launch_member" jdbcType="VARCHAR" property="launchMember" />
    <result column="return_content" jdbcType="VARCHAR" property="returnContent" />
    <result column="return_count" jdbcType="INTEGER" property="returnCount" />
    <result column="support_money" jdbcType="BIGINT" property="supportMoney" />
    <result column="freight" jdbcType="INTEGER" property="freight" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_name, launch_member, return_content, return_count, support_money, freight, 
    order_id
  </sql>
  <select id="selectByExample" parameterType="com.pz.crowd.entity.po.OrderProjectPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order_project
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_order_project
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pz.crowd.entity.po.OrderProjectPOExample">
    delete from t_order_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pz.crowd.entity.po.OrderProjectPO">
    insert into t_order_project (id, project_name, launch_member, 
      return_content, return_count, support_money, 
      freight, order_id)
    values (#{id,jdbcType=BIGINT}, #{projectName,jdbcType=VARCHAR}, #{launchMember,jdbcType=VARCHAR}, 
      #{returnContent,jdbcType=VARCHAR}, #{returnCount,jdbcType=INTEGER}, #{supportMoney,jdbcType=BIGINT}, 
      #{freight,jdbcType=INTEGER}, #{orderId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.pz.crowd.entity.po.OrderProjectPO">
    insert into t_order_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="launchMember != null">
        launch_member,
      </if>
      <if test="returnContent != null">
        return_content,
      </if>
      <if test="returnCount != null">
        return_count,
      </if>
      <if test="supportMoney != null">
        support_money,
      </if>
      <if test="freight != null">
        freight,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="launchMember != null">
        #{launchMember,jdbcType=VARCHAR},
      </if>
      <if test="returnContent != null">
        #{returnContent,jdbcType=VARCHAR},
      </if>
      <if test="returnCount != null">
        #{returnCount,jdbcType=INTEGER},
      </if>
      <if test="supportMoney != null">
        #{supportMoney,jdbcType=BIGINT},
      </if>
      <if test="freight != null">
        #{freight,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pz.crowd.entity.po.OrderProjectPOExample" resultType="java.lang.Long">
    select count(*) from t_order_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order_project
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.launchMember != null">
        launch_member = #{record.launchMember,jdbcType=VARCHAR},
      </if>
      <if test="record.returnContent != null">
        return_content = #{record.returnContent,jdbcType=VARCHAR},
      </if>
      <if test="record.returnCount != null">
        return_count = #{record.returnCount,jdbcType=INTEGER},
      </if>
      <if test="record.supportMoney != null">
        support_money = #{record.supportMoney,jdbcType=BIGINT},
      </if>
      <if test="record.freight != null">
        freight = #{record.freight,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order_project
    set id = #{record.id,jdbcType=BIGINT},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      launch_member = #{record.launchMember,jdbcType=VARCHAR},
      return_content = #{record.returnContent,jdbcType=VARCHAR},
      return_count = #{record.returnCount,jdbcType=INTEGER},
      support_money = #{record.supportMoney,jdbcType=BIGINT},
      freight = #{record.freight,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pz.crowd.entity.po.OrderProjectPO">
    update t_order_project
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="launchMember != null">
        launch_member = #{launchMember,jdbcType=VARCHAR},
      </if>
      <if test="returnContent != null">
        return_content = #{returnContent,jdbcType=VARCHAR},
      </if>
      <if test="returnCount != null">
        return_count = #{returnCount,jdbcType=INTEGER},
      </if>
      <if test="supportMoney != null">
        support_money = #{supportMoney,jdbcType=BIGINT},
      </if>
      <if test="freight != null">
        freight = #{freight,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pz.crowd.entity.po.OrderProjectPO">
    update t_order_project
    set project_name = #{projectName,jdbcType=VARCHAR},
      launch_member = #{launchMember,jdbcType=VARCHAR},
      return_content = #{returnContent,jdbcType=VARCHAR},
      return_count = #{returnCount,jdbcType=INTEGER},
      support_money = #{supportMoney,jdbcType=BIGINT},
      freight = #{freight,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>