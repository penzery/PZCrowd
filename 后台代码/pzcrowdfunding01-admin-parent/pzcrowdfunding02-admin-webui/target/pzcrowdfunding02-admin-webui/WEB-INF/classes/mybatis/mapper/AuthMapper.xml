<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pz.crowd.mapper.AuthMapper">
  <resultMap id="BaseResultMap" type="com.pz.crowd.entity.Auth">
    <id column="auth_id" jdbcType="BIGINT" property="authId" />
    <result column="auth_name" jdbcType="VARCHAR" property="authName" />
    <result column="auth_title" jdbcType="VARCHAR" property="authTitle" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    auth_id, auth_name, auth_title, category_id
  </sql>

  <select id="selectAssignedAuthNameByAdminId" resultType="string">
        select distinct ta.auth_name from t_auth as ta inner join t_inner_role_auth as tira on ta.auth_id=tira.auth_id inner join t_inner_admin_role as tiar on tira.role_id=tiar.role_id where tiar.admin_id=#{adminId} and ta.auth_name!='' and ta.auth_name is not null
  </select>

  <select id="selectAssignedAuth" resultMap="BaseResultMap">
    select auth.auth_id,auth.auth_name,auth.auth_title,auth.category_id from t_auth as auth inner join t_inner_role_auth as ira on ira.auth_id=auth.auth_id where ira.role_id=#{roleId}
  </select>

  <select id="selectByExample" parameterType="com.pz.crowd.entity.AuthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_auth
    where auth_id = #{authId,jdbcType=BIGINT}
  </select>
  <delete id="deleteOldRoleAuthRelationship">
    delete from t_inner_role_auth where role_id=#{roleId}
  </delete>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_auth
    where auth_id = #{authId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pz.crowd.entity.AuthExample">
    delete from t_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertRoleAuthRelationship">
    insert into t_inner_role_auth(role_id,auth_id) values
    <foreach collection="authIdList" item="authId" separator=",">(#{roleId},#{authId})</foreach>
  </insert>

  <insert id="insert" parameterType="com.pz.crowd.entity.Auth">
    insert into t_auth (auth_id, auth_name, auth_title, 
      category_id)
    values (#{authId,jdbcType=BIGINT}, #{authName,jdbcType=VARCHAR}, #{authTitle,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.pz.crowd.entity.Auth">
    insert into t_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        auth_id,
      </if>
      <if test="authName != null">
        auth_name,
      </if>
      <if test="authTitle != null">
        auth_title,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        #{authId,jdbcType=BIGINT},
      </if>
      <if test="authName != null">
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="authTitle != null">
        #{authTitle,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pz.crowd.entity.AuthExample" resultType="java.lang.Long">
    select count(*) from t_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_auth
    <set>
      <if test="record.authId != null">
        auth_id = #{record.authId,jdbcType=BIGINT},
      </if>
      <if test="record.authName != null">
        auth_name = #{record.authName,jdbcType=VARCHAR},
      </if>
      <if test="record.authTitle != null">
        auth_title = #{record.authTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_auth
    set auth_id = #{record.authId,jdbcType=BIGINT},
      auth_name = #{record.authName,jdbcType=VARCHAR},
      auth_title = #{record.authTitle,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pz.crowd.entity.Auth">
    update t_auth
    <set>
      <if test="authName != null">
        auth_name = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="authTitle != null">
        auth_title = #{authTitle,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
    </set>
    where auth_id = #{authId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pz.crowd.entity.Auth">
    update t_auth
    set auth_name = #{authName,jdbcType=VARCHAR},
      auth_title = #{authTitle,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=BIGINT}
    where auth_id = #{authId,jdbcType=BIGINT}
  </update>
</mapper>